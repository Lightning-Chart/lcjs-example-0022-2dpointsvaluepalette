(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const r=a(377),{lightningChart:s,emptyLine:o,PalettedFill:n,LUT:l,regularColorSteps:i,emptyFill:h,Themes:p}=r,{createProgressiveTraceGenerator:c}=a(613),d=s({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).ChartXY({theme:p[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("2D points value palette coloring").setCursorMode("show-all-interpolated"),u=new n({lookUpProperty:"value",lut:new l({units:"trace dist (y)",interpolate:!0,percentageValues:!0,steps:i(0,1,d.getTheme().examples.intensityColorPalette).map((e,t,a)=>t===a.length-1?{...e,color:e.color.setA(0)}:e)})});c().setNumberOfPoints(1e3).generate().toPromise().then(e=>{d.addLineSeries({}).setName("Trace stroke").appendJSON(e).setStrokeStyle(e=>e.setThickness(5));const t=d.addPointSeries().setName("Outliers").setPointSize(3).setPointFillStyle(u).setPointStrokeStyle(o),a=[];e.forEach(e=>a.push(...new Array(Math.round(50*Math.random())).fill(0).map((t,a)=>{const r=e.y+10*(2*Math.random()-1);return{x:e.x,y:r,value:Math.abs(r-e.y)}}))),t.appendJSON(a)})},216:()=>{}},e=>{e.O(0,[502],()=>e(e.s=44)),e.O()}]);